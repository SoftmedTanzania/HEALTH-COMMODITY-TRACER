"""
Django settings for HealthCommodityTracer project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u=$li_bgrve%qdm@6=(&*9x08z6t3-i0$obns8j3l9l&xvv4sx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1',]

CRISPY_TEMPLATE_PACK = 'bootstrap4'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',

    # Custom Apps
    'API',
    'UserManagement',
    'MasterDataManagement',
    'FlowManagement',
    'Reporting',
    'bootstrap4',
    'crispy_forms',
    'admin_reorder',
    'django_tables2',

    # android related apps
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'corsheaders',
    'mptt',
    'fcm',
    'background_task',
]


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',  # enables simple command line authentication
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    )
}


REST_AUTH_SERIALIZERS = {
    'TOKEN_SERIALIZER': 'API.serializers.TokenSerializer',
    'USER_SERIALIZER': 'API.serializers.UserProfileSerializer',
}

FCM_APIKEY= "AAAAx9az6G8:APA91bEPwkrcm7CJomrtx7KAmkCyKY3qDrR4wztejCojWpoeWGtbz1dr78WyZ3y3Kn55LFn6ww8" \
            "1zHqHQ0Svu8Fo5wvBT8ZD9l6SDzYv_7Ao96MYtAUIqd9L6n44xx3O03OmVxmeX7i3"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin_reorder.middleware.ModelAdminReorder',
]

ROOT_URLCONF = 'HealthCommodityTracer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
            ],
        },
    },
]

ADMIN_REORDER = (
    # Keep original label and models
    'sites',

    # Rename app
    # {'app': 'auth', 'label': 'Authorisation'},

    # Reorder app models
    # {'app': 'auth', 'models': ('auth.User', 'auth.Group', 'UserManagement.UserStoreMapping')},

    # Exclude models
    # {'app': 'auth', 'models': ('auth.User', )},

    # Cross-linked models
    # {'app': 'auth', 'models': ('auth.User', 'sites.Site')},

    # models with custom name
    {'app': 'auth','label': 'User Management', 'models': (

        {'model': 'auth.User', 'label': 'Registered Users'},
        {'model': 'auth.Group', 'label': 'User Groups'},
    )},

    {'app': 'auth','label': 'Application Permissions', 'models': (

        {'model': 'UserManagement.Module', 'label': 'Modules'},
        {'model': 'UserManagement.SubModule', 'label': 'Sub Modules'},
        {'model': 'UserManagement.SubModulesPermission', 'label': 'Sub Module Permissions'},
    )},

    {'app': 'MasterDataManagement','label':'Master Data Management', 'models': (
        {'model': 'MasterDataManagement.HealthCommodity', 'label': 'Health Commodities'},
        {'model': 'MasterDataManagement.HealthCommoditiesCategory', 'label': 'Health Commodity Categories'},
        {'model': 'MasterDataManagement.HealthCommodityBalance', 'label': 'Health Commodity Facility Mapping'},
        {'model': 'MasterDataManagement.FacilityType', 'label': 'Facility Types'},
        {'model': 'MasterDataManagement.HealthFacility', 'label': 'Health Facilities'},
        {'model': 'MasterDataManagement.Unit', 'label': 'Units'},
        {'model': 'MasterDataManagement.Country', 'label': 'Countries'},
        {'model': 'MasterDataManagement.Region', 'label': 'Regions'},
        {'model': 'MasterDataManagement.District', 'label': 'Districts'},
        {'model': 'MasterDataManagement.Ward', 'label': 'Wards'},
        {'model': 'MasterDataManagement.Location', 'label': 'Locations'},
    )},

    {'app': 'background_task', 'label': 'Background Processes', 'models': (
        {'model': 'background_task.Task', 'label': 'Scheduled Tasks'},
        {'model': 'background_task.CompletedTask', 'label': 'Completed Tasks'},

    )},
)

AUTH_PROFILE_MODULE = 'UserManagement.Profile'
WSGI_APPLICATION = 'HealthCommodityTracer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'HealthCommodityTracer',
        'HOST': '127.0.0.1',
        'PORT': '8889',
        'USER': 'root',
        'PASSWORD': 'root',
        'OPTIONS': {
            'sql_mode': 'traditional',
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Dar_es_Salaam'

LOGIN_URL = '/'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
